<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<base href=".">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style type="text/css">
body {
	height: 100vh;
	width: 100vw;
	margin: 0;
}

.v-reconnect-dialog {
	position: absolute;
	top: 1em;
	right: 1em;
	border: 1px solid black;
	padding: 1em;
	z-index: 10000;
}

.v-system-error {
	color: red;
	background: white;
	position: absolute;
	top: 1em;
	right: 1em;
	border: 1px solid black;
	padding: 1em;
	z-index: 10000;
	pointer-events: auto;
}
</style>
<script type="text/javascript"
	src="./frontend/bower_components/webcomponentsjs/webcomponents-loader.js"></script>
<script type="text/javascript">
	//<![CDATA[
	(function() {
		var apps = {};
		var widgetsets = {};
		var log;
		if (typeof console === undefined
				|| !window.location.search.match(/[&?]debug(&|$)/)) { /* If no console.log present, just use a no-op */
			log = function() {
			};
		} else if (typeof console.log === "function") { /* If it's a function, use it with apply */
			log = function() {
				console.log.apply(console, arguments);
			};
		} else { /* In IE, its a native function for which apply is not defined, but it works		 without a proper 'this' reference */
			log = console.log;
		}
		var isWidgetsetLoaded = function(widgetset) {
			var className = widgetset.replace(/\./g, "_");
			return (typeof window[className]) != "undefined";
		};
		var loadWidgetset = function(url, widgetset) {
			if (widgetsets[widgetset]) {
				return;
			}
			log("load widgetset", url, widgetset);
			setTimeout(function() {
				if (!isWidgetsetLoaded(widgetset)) {
					alert("Failed to load the widgetset: " + url);
				}
			}, 15000);
			var scriptTag = document.createElement('script');
			scriptTag.setAttribute('type', 'text/javascript');
			scriptTag.setAttribute('src', url);
			document.getElementsByTagName('head')[0].appendChild(scriptTag);
			widgetsets[widgetset] = {
				pendingApps : []
			};
		};
		var isInitializedInDom = function(appId) {
			var appDiv = document.getElementById(appId);
			if (!appDiv) {
				return false;
			}
			for (var i = 0; i < appDiv.childElementCount; i++) {
				var className = appDiv.childNodes[i].className; /* If the app div contains a child with the class			"v-app-loading" we have only received the HTML			but not yet started the widget set			(UIConnector removes the v-app-loading div). */
				if (className && className.indexOf("v-app-loading") != -1) {
					return false;
				}
			}
			return true;
		}; /* 	 * Needed for Testbench compatibility, but prevents any Vaadin 7 app from	 * bootstrapping unless the legacy vaadinBootstrap.js file is loaded before	 * this script.	 */
		window.Vaadin = window.Vaadin || {};
		window.Vaadin.Flow = window.Vaadin.Flow
				|| {
					clients : {},
					initApplication : function(appId, config) {
						var testbenchId = appId.replace(/-\d+$/, '');
						if (apps[appId]) {
							if (window.Vaadin
									&& window.Vaadin.Flow
									&& window.Vaadin.Flow.clients
									&& window.Vaadin.Flow.clients[testbenchId]
									&& window.Vaadin.Flow.clients[testbenchId].initializing) {
								throw "Application " + appId
										+ " is already being initialized";
							}
							if (isInitializedInDom(appId)) {
								throw "Application " + appId
										+ " already initialized";
							}
						}
						log("init application", appId, config);
						window.Vaadin.Flow.clients[testbenchId] = {
							isActive : function() {
								return true;
							},
							initializing : true
						};
						var getConfig = function(name) {
							var value = config[name];
							return value;
						}; /* Export public data */
						var app = {
							getConfig : getConfig
						};
						apps[appId] = app;
						if (!window.name) {
							window.name = appId + '-' + Math.random();
						}
						var widgetset = "client";
						widgetsets[widgetset] = {
							pendingApps : []
						};
						if (widgetsets[widgetset].callback) {
							log("Starting from bootstrap", appId);
							widgetsets[widgetset].callback(appId);
						} else {
							log("Setting pending startup", appId);
							widgetsets[widgetset].pendingApps.push(appId);
						}
						return app;
					},
					getAppIds : function() {
						var ids = [];
						for ( var id in apps) {
							if (apps.hasOwnProperty(id)) {
								ids.push(id);
							}
						}
						return ids;
					},
					getApp : function(appId) {
						return apps[appId];
					},
					registerWidgetset : function(widgetset, callback) {
						log("Widgetset registered", widgetset);
						var ws = widgetsets[widgetset];
						if (ws && ws.pendingApps) {
							ws.callback = callback;
							for (var i = 0; i < ws.pendingApps.length; i++) {
								var appId = ws.pendingApps[i];
								log("Starting from register widgetset", appId);
								callback(appId);
							}
							ws.pendingApps = null;
						}
					}
				};
		log('Flow bootstrap loaded');
		if (typeof window.__gwtStatsEvent != 'function') {
			window.Vaadin.Flow.gwtStatsEvents = [];
			window.__gwtStatsEvent = function(event) {
				window.Vaadin.Flow.gwtStatsEvents.push(event);
				return true;
			};
		}
		;
		var uidl = {
			"syncId" : 0,
			"clientId" : 0,
			"changes" : [ {
				"node" : 1,
				"type" : "splice",
				"feat" : 2,
				"index" : 0,
				"addNodes" : [ 3 ]
			}, {
				"node" : 1,
				"type" : "put",
				"key" : "pushUrl",
				"feat" : 5,
				"value" : ""
			}, {
				"node" : 1,
				"type" : "put",
				"key" : "alwaysXhrToServer",
				"feat" : 5,
				"value" : true
			}, {
				"node" : 1,
				"type" : "put",
				"key" : "pushMode",
				"feat" : 5,
				"value" : "DISABLED"
			}, {
				"node" : 1,
				"type" : "put",
				"key" : "parameters",
				"feat" : 5,
				"nodeValue" : 2
			}, {
				"node" : 1,
				"type" : "put",
				"key" : "tag",
				"feat" : 0,
				"value" : "body"
			}, {
				"node" : 2,
				"type" : "attach"
			}, {
				"node" : 2,
				"type" : "put",
				"key" : "fallbackTransport",
				"feat" : 6,
				"value" : "long-polling"
			}, {
				"node" : 2,
				"type" : "put",
				"key" : "transport",
				"feat" : 6,
				"value" : "websocket"
			}, {
				"node" : 3,
				"type" : "attach"
			}, {
				"node" : 3,
				"type" : "put",
				"key" : "theme",
				"feat" : 3,
				"value" : "padding spacing"
			}, {
				"node" : 3,
				"type" : "put",
				"key" : "width",
				"feat" : 12,
				"value" : "100%"
			}, {
				"node" : 3,
				"type" : "put",
				"key" : "tag",
				"feat" : 0,
				"value" : "vaadin-vertical-layout"
			} ],
			"timings" : [ 78991, 11255 ],
			"Vaadin-Security-Key" : "86d0af85-812e-430b-97d5-3db25e5686a8",
			"Vaadin-Push-ID" : "1ccf0c2d-72d9-4303-a3f6-b1b96b45c647"
		};
		var config = {
			"frontendUrlEs6" : "context://frontend/",
			"frontendUrlEs5" : "context://frontend/",
			"versionInfo" : {
				"vaadinVersion" : "1.0.3",
				"atmosphereVersion" : "2.4.24.vaadin1"
			},
			"sessExpMsg" : {
				"caption" : null,
				"message" : null,
				"url" : null
			},
			"contextRootUrl" : "./",
			"debug" : true,
			"requestTiming" : true,
			"heartbeatInterval" : 300,
			"v-uiId" : 6
		};
		config.uidl = uidl;
		window.Vaadin.Flow.initApplication("ROOT-2521314", config);
	})();//]]>
</script>
<script type="text/javascript" defer
	src="./VAADIN/static/client/client-BF4676DDAFDA5E40AE93EFEB692AAAD5.cache.js"></script>
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/element-mixin.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-themable-mixin/vaadin-themable-mixin.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/resolve-url.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/mixin.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/import-href.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/property-effects.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/html-tag.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/settings.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/properties-changed.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/boot.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/async.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/path.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/properties-mixin.html">
<link rel="import"
	href="./frontend/bower_components/polymer/polymer-element.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/elements/dom-module.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-ordered-layout/theme/lumo/vaadin-vertical-layout.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/property-accessors.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-element-mixin/vaadin-element-mixin.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/style-gather.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-development-mode-detector/vaadin-development-mode-detector.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/utils/case-map.html">
<link rel="import"
	href="./frontend/bower_components/polymer/lib/mixins/template-stamp.html">
<meta name="google-signin-scope" content="profile email">
<meta name="google-signin-client_id"
	content="871400351809-l38aa149odc6kj5bhg9oqb1d5g4lh2mm.apps.googleusercontent.com">
<script src="https://apis.google.com/js/platform.js" async defer></script>
<div class="g-signin2" data-theme="light"></div>
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/color.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/typography.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/sizing.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/spacing.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/style.html">
<link rel="import"
	href="./frontend/bower_components/vaadin-lumo-styles/icons.html">
<script id="_theme-header-injection">
	function _inlineHeader(tag, content) {
		var customStyle = document.createElement(tag);
		customStyle.innerHTML = content;
		var firstScript = document.head.querySelector('script');
		document.head.insertBefore(customStyle, firstScript);
	}
	_inlineHeader('custom-style',
			'<style include="lumo-color lumo-typography"></style>');
	document.head.removeChild(document
			.getElementById('_theme-header-injection'));
</script>
<meta charset="ISO-8859-1">
<meta name="google-signin-scope" content="profile email">
<meta name="google-signin-client_id"
	content="871400351809-l38aa149odc6kj5bhg9oqb1d5g4lh2mm.apps.googleusercontent.com">
<script src="https://apis.google.com/js/platform.js" async defer></script>
<title>Proyecto Prueba</title>
</head>
<body>
	<div class="g-signin2" data-theme="light"></div>
</body>
</html>